<div class="details">
    <EditForm Model="@Model" OnValidSubmit="@Model.SubmitAsync">

        <DataAnnotationsValidator />

        <div class="row">
            <div class="form-group col">
                <label for="first">First Name</label>
                <InputText disabled="@(!Model.IsEdit)" @bind-Value="@Model.FirstName" class="form-control" id="first" />
                <ValidationMessage For="@(() => Model.FirstName)" />
            </div>
            <div class="form-group col">
                <label for="second">Second Name</label>
                <InputText disabled="@(!Model.IsEdit)" @bind-Value="@Model.SecondName" class="form-control" id="second" />
                <ValidationMessage For="@(() => Model.SecondName)" />
            </div>
        </div>
        <div class="form-group">
            <label for="email">Email</label>
            <InputText disabled="@(!Model.IsEdit)" @bind-Value="@Model.Email" class="form-control" id="email" />
            <ValidationMessage For="@(() => Model.Email)" />
        </div>
        <div class="form-group">
            <label for="contact">Contact Number</label>
            <InputText disabled="@(!Model.IsEdit)" @bind-Value="@Model.ContactNumber" class="form-control" id="contact" />
            <ValidationMessage For="@(() => Model.ContactNumber)" />
        </div>
        
        @if (Model.IsEdit)
        {
            <input type="submit" class="btn btn-primary" value="Update" />
            @*<button class="btn btn-danger" @onclick="((e) => Model.IsEdit = false)">Cancel</button>*@
        }
    </EditForm>
    @if (!Model.IsEdit)
    {
<button @onclick="((e) => Model.IsEdit = true)" class="btn edit-btn"><i class="fas fa-edit"></i></button>
    }

</div>





@code {    
    [Parameter]
    public ContactFormViewModel Model { get; set; }
}