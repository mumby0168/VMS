@inject AuthenticationStateProvider AuthenticationStateProvider
@inject ITokenStorageService TokenService
@inject IPubSubService PubSubService
@inject NavigationManager NavigationManager


<div class="top-row">
    @if(IsLoggedIn)    
    {             
            <NavLink class="nav-link" href="create-admin">
                <span class="oi oi-plus" aria-hidden="true"></span> Create Admin
            </NavLink>        
            <div style="hover: pointer" @onclick="Logout" class="nav-link">
                <span class="oi oi-account-logout" aria-hidden="true"></span> Logout
            </div>
    }
    else
    {
        <NavLink class="nav-link" href="system-admin-login">
                <span class="oi oi-account-login" aria-hidden="true"></span> Login
        </NavLink>        
    }
</div>


@code {
    [Parameter]
    public bool IsLoggedIn { get; set; }

    public void Logout()
    {
        TokenService.RemoveToken();
        NavigationManager.NavigateTo("system-admin-login");
        PubSubService.Publish<UpdateRestrictedViewsEvent>();
    }
}



